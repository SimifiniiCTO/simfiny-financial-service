# Default values for test.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/monetr/monetr
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

serviceAccountName:

podAnnotations: { }

podSecurityContext: { }
# fsGroup: 2000

securityContext:
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
# capabilities:
#   drop:
#   - ALL
# runAsUser: 1000

service:
  enabled: true
  separateUIAndAPI: false
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: { }
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: monetr.local
      paths: [ ]
  tls: [ ]
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: { }
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

disruption:
  enabled: false
  minAvailable: 1
  maxUnavailable: 1

nodeSelector:
  kubernetes.io/os: linux
  kubernetes.io/arch: amd64

tolerations: [ ]

affinity: { }

extraVolumes: [ ]
extraVolumeMounts: [ ]

cloudSqlProxy:
  enabled: false
  image: gcr.io/cloudsql-docker/gce-proxy:1.17
  command:
    - "/cloud_sql_proxy"
    # If connecting from a VPC-native GKE cluster, you can use the
    # following flag to have the proxy connect over private IP
    # - "-ip_address_types=PRIVATE"

    # Replace DB_PORT with the port the proxy should listen on
    # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
    - "-instances=<INSTANCE_CONNECTION_NAME>=tcp:<DB_PORT>"

databaseMigrations:
  initContainer: true

customEnvFrom: [ ]

api:
  customEnv: [ ]
  includeSecrets: false
  # DEPRECATED. Use server.listenPort instead.
  listenPort: 4000
  # DEPRECATED. Use server.statsPort instead.
  statsPort: 9000
  name: monetr
  uiDomainName: localhost:4000
  apiDomainName: localhost:4000
  allowSignUp: true
  # DEPRECATED. This is no longer used.
  enableWebhooks: false
  backgroundJobs:
    engine: gocraft
    scheduler: internal
    jobSchedule: { }
  server:
    listenPort: 4000
    statsPort: 9000
    cookies:
      sameSiteStrict: true
      secure: true
      name: M-Token
  beta:
    enableBetaCodes: false
  jwt:
    loginJwtSecret: ""
    registrationJwtSecret: ""
    # Number of days a login JWT token should be considered valid.
    loginExpiration: 7
  postgreSql:
    address: localhost
    port: 5432
    username: postgres
    password: ""
    database: postgres
    insecureSkipVerify: false
    caCertificatePath: ""
    certificatePath: ""
    keyPath: ""
  email:
    enabled: false
    domain: localhost
    verification:
      enabled: false
      tokenLifetime: 10m
      tokenSecret: abc123
    forgotPassword:
      enabled: false
      tokenLifetime: 10m
      tokenSecret: qwe123
    smtp:
      identity: ""
      username: "no-reply"
      password: "email-password"
      host: "smtp.gmail.com"
      port: 1025
  reCaptcha:
    enabled: false
    privateKey: ""
    publicKey: ""
    verifyLogin: false
    verifyRegister: false
    verifyForgotPassword: false
  plaid:
    clientId: "abc123"
    clientSecret: "abc123"
    environment: "https://sandbox.plaid.com"
    birthdatePrompt: false # Not yet implemented
    enableReturningUserExperience: false
    webhooksEnabled: false
    webhooksDomain: ""
    oauthDomain: ""
    maxNumberOfLinks: 0
  cors:
    allowedOrigins:
      - "*"
    debug: true
  redis:
    enabled: true
    address: localhost
    port: 6379
    namespace: monetr
  logging:
    level: trace
    format: text
    stackDriver:
      enabled: false
  sentry:
    enabled: true
    dsn: 'https://0ec05f946a2e489ca928b3ff47f687e6@o4504694642311168.ingest.sentry.io/4504694643884032'
    externalDsn: ''
    sampleRate: 1
    traceSampleRate: 1
  stripe:
    enabled: true
    billingEnabled: true
    taxesEnabled: true
    apiKey: "sk_test_51M1F1pBV97V9M33e3Ki1k5OqkdhfdDUBNTwDFzUtRmsSYbHf7qE3d1kkFCYRxfS70bJKBOKR5Zbv103sqvNd0gnm00lMyRDWEh"
    publicKey: "pk_test_51M1F1pBV97V9M33effvr2EMvx6x3xGP4hgu473T1fdzQ7WRCKINlYgEwuj0IhuXNuQsM9Ey8riGM0DUxZPPJBxcG00ZZpIvyhi"
    webhooksEnabled: true
    webhooksDomain: ""
    webhookSecret: "whsec_21441814697a4a51dc01395a030498131d56ec4d7155bb216cc75f36548c86bf"
  keyManagement:
    enabled: false
    provider: google # Google or AWS
    google:
      resourceName: ""
    aws:
      region: us-east-1
      accessKey: null
      secretKey: null
      keyId: ""
      endpoint: null

